{"version":3,"file":"books.routes.js","names":["BooksRouter","express","Router","get","_ref","_asyncToGenerator2","_regenerator","mark","_callee","req","res","next","userId","book_id","formatBookData","data","booksList","wrap","_callee$","_context","prev","isAuthenticated","abrupt","status","json","message","user","id","params","book","user_id","title","authors","comments","link","image","google_id","type","location","rating","books","findOne","sent","findAll","map","t0","console","error","stop","_x","_x2","_x3","apply","arguments","post","_ref2","_callee2","newBook","bookWithUserId","_callee2$","_context2","body","_objectSpread","addOne","_x4","_x5","_x6","_ref3","_callee3","_callee3$","_context3","removeOne","_x7","_x8","_x9","put","_ref4","_callee4","updatedBook","updatedResult","_callee4$","_context4","updateOne","affectedRows","split","_x10","_x11","_x12","_default","_exports"],"sources":["../../routes/books.routes.js"],"sourcesContent":["import express from \"express\";\nimport books from \"../controllers/books.controllers\";\n\n// Requests will reach these routes already matching /api/books\nconst BooksRouter = express.Router();\n\n//? means id is optional\nBooksRouter.get(\"/:book_id?\", async (req, res, next) => {\n  if (!req.isAuthenticated()) {\n    return res.status(401).json({ message: \"User not authenticated\" });\n  }\n  const userId = req.user.id; // This comes from the session/auth middleware\n  const { book_id } = req.params;\n\n  try {\n    const formatBookData = (book) => ({\n      book_id: book.book_id,\n      user_id: book.user_id,\n      title: book.title,\n      authors: book.authors,\n      comments: book.comments,\n      link: book.link,\n      image: book.image,\n      google_id: book.google_id,\n      type: book.type,\n      location: book.location,\n      status: book.status,\n      rating: book.rating,\n    });\n\n    if (book_id) {\n      const data = await books.findOne(book_id, userId);\n      if (!data) {\n        return res.status(404).json({ message: \"Book not found\" });\n      }\n      return res.json(formatBookData(data));\n    } else {\n      const booksList = await books.findAll({ user_id: userId }); // Fetch books for the authenticated user\n      return res.json(booksList.map(formatBookData));\n    }\n  } catch (err) {\n    console.error(\"Error fetching book data:\", err);\n    return next(err);\n  }\n});\n\nBooksRouter.post(\"/\", async (req, res, next) => {\n  if (!req.isAuthenticated()) {\n    return res.status(401).json({ message: \"User not authenticated\" });\n  }\n  const userId = req.user.id;\n  const newBook = req.body;\n\n  try {\n    // Include user_id in the book data\n    const bookWithUserId = {\n      ...newBook,\n      user_id: userId, // Add the user ID to the new book data\n    };\n\n    let data = await books.addOne(bookWithUserId); // Pass newBook to addOne\n\n    res.status(201).json({\n      id: data.book_id,\n      title: data.title,\n      user_id: data.user_id,\n      authors: data.authors || [],\n      comments: data.comments,\n      link: data.link,\n      image: data.image,\n      google_id: data.google_id,\n      type: data.type,\n      location: data.location,\n      status: data.status,\n      rating: data.rating,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nBooksRouter.delete(\"/:book_id\", async (req, res, next) => {\n  try {\n    let { book_id } = req.params;\n    await books.removeOne(book_id);\n    res.json({ message: \"Book deleted\", book_id });\n  } catch (err) {\n    next(err);\n  }\n});\n\nBooksRouter.put(\"/:book_id\", async (req, res, next) => {\n  if (!req.isAuthenticated()) {\n    return res.status(401).json({ message: \"User not authenticated\" });\n  }\n  const userId = req.user.id;\n  const updatedBook = req.body; // Get updated book data from request body\n  const { book_id } = req.params; // Extract book_id from request param\n\n  try {\n    // Update the book in the database\n    const updatedResult = await books.updateOne(updatedBook, book_id, userId); // Pass updatedBook directly\n\n    // Check if the update was successful\n    if (!updatedResult.affectedRows) {\n      return res\n        .status(404)\n        .json({ message: \"Book not found or no changes made.\" });\n    }\n\n    // Respond with the updated book data\n    res.json({\n      id: updatedResult.book_id,\n      user_id: updatedResult.user_id,\n      title: updatedResult.title,\n      authors: updatedResult.authors ? updatedResult.authors.split(\", \") : [], // split works as input if a string\n      comments: updatedResult.comments,\n      link: updatedResult.link,\n      image: updatedResult.image,\n      google_id: updatedResult.google_id,\n      type: updatedResult.type,\n      location: updatedResult.location,\n      status: updatedResult.status,\n      rating: updatedResult.rating,\n    });\n  } catch (err) {\n    console.error(err);\n    next(err);\n  }\n});\n\nexport default BooksRouter;\n"],"mappings":";;;EAGA;EACA,IAAMA,WAAW,GAAGC,mBAAO,CAACC,MAAM,CAAC,CAAC;;EAEpC;EACAF,WAAW,CAACG,GAAG,CAAC,YAAY,gCAAAC,IAAA,OAAAC,kBAAA,0BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAC,QAAOC,GAAG,EAAEC,GAAG,EAAEC,IAAI,OAAAC,MAAA,EAAAC,OAAA,EAAAC,cAAA,EAAAC,IAAA,EAAAC,SAAA,QAAAV,YAAA,YAAAW,IAAA,UAAAC,SAAAC,QAAA,qBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAR,IAAA;YAC5CF,GAAG,CAACY,eAAe,CAAC,CAAC,GAAAF,QAAA,CAAAR,IAAA,mBAAAQ,QAAA,CAAAG,MAAA;YACjBZ,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,EAAEC,OAAO,EAAE,wBAAwB,CAAC,CAAC,CAAC;;YAE9Db,MAAM,GAAGH,GAAG,CAACiB,IAAI,CAACC,EAAE,EAAE;YACpBd,OAAO,GAAKJ,GAAG,CAACmB,MAAM,CAAtBf,OAAO,CAAAM,QAAA,CAAAC,IAAA;;;YAGPN,cAAc,GAAG,SAAjBA,cAAcA,CAAIe,IAAI,UAAM;gBAChChB,OAAO,EAAEgB,IAAI,CAAChB,OAAO;gBACrBiB,OAAO,EAAED,IAAI,CAACC,OAAO;gBACrBC,KAAK,EAAEF,IAAI,CAACE,KAAK;gBACjBC,OAAO,EAAEH,IAAI,CAACG,OAAO;gBACrBC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;gBACvBC,IAAI,EAAEL,IAAI,CAACK,IAAI;gBACfC,KAAK,EAAEN,IAAI,CAACM,KAAK;gBACjBC,SAAS,EAAEP,IAAI,CAACO,SAAS;gBACzBC,IAAI,EAAER,IAAI,CAACQ,IAAI;gBACfC,QAAQ,EAAET,IAAI,CAACS,QAAQ;gBACvBf,MAAM,EAAEM,IAAI,CAACN,MAAM;gBACnBgB,MAAM,EAAEV,IAAI,CAACU;cACf,CAAC,EAAC;;YAEE1B,OAAO,GAAAM,QAAA,CAAAR,IAAA,aAAAQ,QAAA,CAAAR,IAAA;cACU6B,iBAAK,CAACC,OAAO,CAAC5B,OAAO,EAAED,MAAM,CAAC,SAA3CG,IAAI,GAAAI,QAAA,CAAAuB,IAAA;YACL3B,IAAI,GAAAI,QAAA,CAAAR,IAAA,oBAAAQ,QAAA,CAAAG,MAAA;YACAZ,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,EAAEC,OAAO,EAAE,gBAAgB,CAAC,CAAC,CAAC,iBAAAN,QAAA,CAAAG,MAAA;;YAErDZ,GAAG,CAACc,IAAI,CAACV,cAAc,CAACC,IAAI,CAAC,CAAC,UAAAI,QAAA,CAAAR,IAAA;;cAEb6B,iBAAK,CAACG,OAAO,CAAC,EAAEb,OAAO,EAAElB,MAAM,CAAC,CAAC,CAAC,UAApDI,SAAS,GAAAG,QAAA,CAAAuB,IAAA,QAAAvB,QAAA,CAAAG,MAAA;YACRZ,GAAG,CAACc,IAAI,CAACR,SAAS,CAAC4B,GAAG,CAAC9B,cAAc,CAAC,CAAC,UAAAK,QAAA,CAAAR,IAAA,oBAAAQ,QAAA,CAAAC,IAAA,MAAAD,QAAA,CAAA0B,EAAA,GAAA1B,QAAA;;;YAGhD2B,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAA5B,QAAA,CAAA0B,EAAK,CAAC,CAAC,OAAA1B,QAAA,CAAAG,MAAA;YACzCX,IAAI,CAAAQ,QAAA,CAAA0B,EAAI,CAAC,4BAAA1B,QAAA,CAAA6B,IAAA,OAAAxC,OAAA,oBAEnB,oBAAAyC,EAAA,EAAAC,GAAA,EAAAC,GAAA,UAAA/C,IAAA,CAAAgD,KAAA,OAAAC,SAAA;;EAAA,CAAC;;EAEFrD,WAAW,CAACsD,IAAI,CAAC,GAAG,gCAAAC,KAAA,OAAAlD,kBAAA,0BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAiD,SAAO/C,GAAG,EAAEC,GAAG,EAAEC,IAAI,OAAAC,MAAA,EAAA6C,OAAA,EAAAC,cAAA,EAAA3C,IAAA,QAAAT,YAAA,YAAAW,IAAA,UAAA0C,UAAAC,SAAA,qBAAAA,SAAA,CAAAxC,IAAA,GAAAwC,SAAA,CAAAjD,IAAA;YACpCF,GAAG,CAACY,eAAe,CAAC,CAAC,GAAAuC,SAAA,CAAAjD,IAAA,mBAAAiD,SAAA,CAAAtC,MAAA;YACjBZ,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,EAAEC,OAAO,EAAE,wBAAwB,CAAC,CAAC,CAAC;;YAE9Db,MAAM,GAAGH,GAAG,CAACiB,IAAI,CAACC,EAAE;YACpB8B,OAAO,GAAGhD,GAAG,CAACoD,IAAI,CAAAD,SAAA,CAAAxC,IAAA;;;YAGtB;YACMsC,cAAc,GAAAI,aAAA,CAAAA,aAAA;YACfL,OAAO;cACV3B,OAAO,EAAElB,MAAM,CAAE;YAAA,GAAAgD,SAAA,CAAAjD,IAAA;;cAGF6B,iBAAK,CAACuB,MAAM,CAACL,cAAc,CAAC,SAAzC3C,IAAI,GAAA6C,SAAA,CAAAlB,IAAA,EAAuC;;YAE/ChC,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;cACnBG,EAAE,EAAEZ,IAAI,CAACF,OAAO;cAChBkB,KAAK,EAAEhB,IAAI,CAACgB,KAAK;cACjBD,OAAO,EAAEf,IAAI,CAACe,OAAO;cACrBE,OAAO,EAAEjB,IAAI,CAACiB,OAAO,IAAI,EAAE;cAC3BC,QAAQ,EAAElB,IAAI,CAACkB,QAAQ;cACvBC,IAAI,EAAEnB,IAAI,CAACmB,IAAI;cACfC,KAAK,EAAEpB,IAAI,CAACoB,KAAK;cACjBC,SAAS,EAAErB,IAAI,CAACqB,SAAS;cACzBC,IAAI,EAAEtB,IAAI,CAACsB,IAAI;cACfC,QAAQ,EAAEvB,IAAI,CAACuB,QAAQ;cACvBf,MAAM,EAAER,IAAI,CAACQ,MAAM;cACnBgB,MAAM,EAAExB,IAAI,CAACwB;YACf,CAAC,CAAC,CAACqB,SAAA,CAAAjD,IAAA,oBAAAiD,SAAA,CAAAxC,IAAA,MAAAwC,SAAA,CAAAf,EAAA,GAAAe,SAAA;;YAEHjD,IAAI,CAAAiD,SAAA,CAAAf,EAAI,CAAC,CAAC,0BAAAe,SAAA,CAAAZ,IAAA,OAAAQ,QAAA,oBAEb,oBAAAQ,GAAA,EAAAC,GAAA,EAAAC,GAAA,UAAAX,KAAA,CAAAH,KAAA,OAAAC,SAAA;;EAAA,CAAC;;EAEFrD,WAAW,UAAO,CAAC,WAAW,gCAAAmE,KAAA,OAAA9D,kBAAA,0BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAA6D,SAAO3D,GAAG,EAAEC,GAAG,EAAEC,IAAI,OAAAE,OAAA,QAAAP,YAAA,YAAAW,IAAA,UAAAoD,UAAAC,SAAA,qBAAAA,SAAA,CAAAlD,IAAA,GAAAkD,SAAA,CAAA3D,IAAA,UAAA2D,SAAA,CAAAlD,IAAA;;YAE3CP,OAAO,GAAKJ,GAAG,CAACmB,MAAM,CAAtBf,OAAO,CAAAyD,SAAA,CAAA3D,IAAA;cACP6B,iBAAK,CAAC+B,SAAS,CAAC1D,OAAO,CAAC;YAC9BH,GAAG,CAACc,IAAI,CAAC,EAAEC,OAAO,EAAE,cAAc,EAAEZ,OAAO,EAAPA,OAAO,CAAC,CAAC,CAAC,CAACyD,SAAA,CAAA3D,IAAA,mBAAA2D,SAAA,CAAAlD,IAAA,KAAAkD,SAAA,CAAAzB,EAAA,GAAAyB,SAAA;;YAE/C3D,IAAI,CAAA2D,SAAA,CAAAzB,EAAI,CAAC,CAAC,0BAAAyB,SAAA,CAAAtB,IAAA,OAAAoB,QAAA,mBAEb,oBAAAI,GAAA,EAAAC,GAAA,EAAAC,GAAA,UAAAP,KAAA,CAAAf,KAAA,OAAAC,SAAA;;EAAA,CAAC;;EAEFrD,WAAW,CAAC2E,GAAG,CAAC,WAAW,gCAAAC,KAAA,OAAAvE,kBAAA,0BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAsE,SAAOpE,GAAG,EAAEC,GAAG,EAAEC,IAAI,OAAAC,MAAA,EAAAkE,WAAA,EAAAjE,OAAA,EAAAkE,aAAA,QAAAzE,YAAA,YAAAW,IAAA,UAAA+D,UAAAC,SAAA,qBAAAA,SAAA,CAAA7D,IAAA,GAAA6D,SAAA,CAAAtE,IAAA;YAC3CF,GAAG,CAACY,eAAe,CAAC,CAAC,GAAA4D,SAAA,CAAAtE,IAAA,mBAAAsE,SAAA,CAAA3D,MAAA;YACjBZ,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,EAAEC,OAAO,EAAE,wBAAwB,CAAC,CAAC,CAAC;;YAE9Db,MAAM,GAAGH,GAAG,CAACiB,IAAI,CAACC,EAAE;YACpBmD,WAAW,GAAGrE,GAAG,CAACoD,IAAI,EAAE;YACtBhD,OAAO,GAAKJ,GAAG,CAACmB,MAAM,CAAtBf,OAAO,EAAiB;YAAAoE,SAAA,CAAA7D,IAAA,KAAA6D,SAAA,CAAAtE,IAAA;;;cAIF6B,iBAAK,CAAC0C,SAAS,CAACJ,WAAW,EAAEjE,OAAO,EAAED,MAAM,CAAC,SAAnEmE,aAAa,GAAAE,SAAA,CAAAvC,IAAA;;;YAGdqC,aAAa,CAACI,YAAY,GAAAF,SAAA,CAAAtE,IAAA,oBAAAsE,SAAA,CAAA3D,MAAA;YACtBZ,GAAG;YACPa,MAAM,CAAC,GAAG,CAAC;YACXC,IAAI,CAAC,EAAEC,OAAO,EAAE,oCAAoC,CAAC,CAAC,CAAC;;;YAG5D;YACAf,GAAG,CAACc,IAAI,CAAC;cACPG,EAAE,EAAEoD,aAAa,CAAClE,OAAO;cACzBiB,OAAO,EAAEiD,aAAa,CAACjD,OAAO;cAC9BC,KAAK,EAAEgD,aAAa,CAAChD,KAAK;cAC1BC,OAAO,EAAE+C,aAAa,CAAC/C,OAAO,GAAG+C,aAAa,CAAC/C,OAAO,CAACoD,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE;cACzEnD,QAAQ,EAAE8C,aAAa,CAAC9C,QAAQ;cAChCC,IAAI,EAAE6C,aAAa,CAAC7C,IAAI;cACxBC,KAAK,EAAE4C,aAAa,CAAC5C,KAAK;cAC1BC,SAAS,EAAE2C,aAAa,CAAC3C,SAAS;cAClCC,IAAI,EAAE0C,aAAa,CAAC1C,IAAI;cACxBC,QAAQ,EAAEyC,aAAa,CAACzC,QAAQ;cAChCf,MAAM,EAAEwD,aAAa,CAACxD,MAAM;cAC5BgB,MAAM,EAAEwC,aAAa,CAACxC;YACxB,CAAC,CAAC,CAAC0C,SAAA,CAAAtE,IAAA,oBAAAsE,SAAA,CAAA7D,IAAA,MAAA6D,SAAA,CAAApC,EAAA,GAAAoC,SAAA;;YAEHnC,OAAO,CAACC,KAAK,CAAAkC,SAAA,CAAApC,EAAI,CAAC;YAClBlC,IAAI,CAAAsE,SAAA,CAAApC,EAAI,CAAC,CAAC,0BAAAoC,SAAA,CAAAjC,IAAA,OAAA6B,QAAA,oBAEb,oBAAAQ,IAAA,EAAAC,IAAA,EAAAC,IAAA,UAAAX,KAAA,CAAAxB,KAAA,OAAAC,SAAA;;EAAA,CAAC,CAAC,IAAAmC,QAAA,GAAAC,QAAA;;EAEYzF,WAAW","ignoreList":[]}