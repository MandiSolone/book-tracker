{"version":3,"file":"books.routes.js","names":["express","books","BooksRouter","Router","get","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","req","res","next","userId","book_id","formatBookData","data","booksList","wrap","_callee$","_context","prev","isAuthenticated","abrupt","status","json","message","user","id","params","book","user_id","title","authors","comments","link","image","google_id","type","location","rating","findOne","sent","findAll","map","t0","console","error","stop","_x","_x2","_x3","apply","arguments","post","_ref2","_callee2","newBook","bookWithUserId","_callee2$","_context2","body","_objectSpread","addOne","_x4","_x5","_x6","_ref3","_callee3","_callee3$","_context3","removeOne","_x7","_x8","_x9","put","_ref4","_callee4","updatedBook","updatedResult","_callee4$","_context4","updateOne","affectedRows","split","_x10","_x11","_x12"],"sources":["../../routes/books.routes.js"],"sourcesContent":["import express from \"express\";\nimport books from \"../controllers/books.controllers.js\";\n\n// Requests will reach these routes already matching /api/books\nconst BooksRouter = express.Router();\n\n// ? means id is optional\nBooksRouter.get(\"/:book_id?\", async (req, res, next) => {\n  if (!req.isAuthenticated()) {\n    return res.status(401).json({ message: \"User not authenticated\" });\n  }\n  const userId = req.user.id; // This comes from the session/auth middleware\n  const { book_id } = req.params;\n\n  try {\n    const formatBookData = (book) => ({\n      book_id: book.book_id,\n      user_id: book.user_id,\n      title: book.title,\n      authors: book.authors,\n      comments: book.comments,\n      link: book.link,\n      image: book.image,\n      google_id: book.google_id,\n      type: book.type,\n      location: book.location,\n      status: book.status,\n      rating: book.rating,\n    });\n\n    if (book_id) {\n      const data = await books.findOne(book_id, userId);\n      if (!data) {\n        return res.status(404).json({ message: \"Book not found\" });\n      }\n      return res.json(formatBookData(data));\n    } else {\n      const booksList = await books.findAll({ user_id: userId }); // Fetch books for the authenticated user\n      return res.json(booksList.map(formatBookData));\n    }\n  } catch (err) {\n    console.error(\"Error fetching book data:\", err);\n    return next(err);\n  }\n});\n\nBooksRouter.post(\"/\", async (req, res, next) => {\n  if (!req.isAuthenticated()) {\n    return res.status(401).json({ message: \"User not authenticated\" });\n  }\n  const userId = req.user.id;\n  const newBook = req.body;\n\n  try {\n    // Include user_id in the book data\n    const bookWithUserId = {\n      ...newBook,\n      user_id: userId, // Add the user ID to the new book data\n    };\n\n    let data = await books.addOne(bookWithUserId); // Pass newBook to addOne\n\n    res.status(201).json({\n      id: data.book_id,\n      title: data.title,\n      user_id: data.user_id,\n      authors: data.authors || [],\n      comments: data.comments,\n      link: data.link,\n      image: data.image,\n      google_id: data.google_id,\n      type: data.type,\n      location: data.location,\n      status: data.status,\n      rating: data.rating,\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nBooksRouter.delete(\"/:book_id\", async (req, res, next) => {\n  try {\n    let { book_id } = req.params;\n    await books.removeOne(book_id);\n    res.json({ message: \"Book deleted\", book_id });\n  } catch (err) {\n    next(err);\n  }\n});\n\nBooksRouter.put(\"/:book_id\", async (req, res, next) => {\n  if (!req.isAuthenticated()) {\n    return res.status(401).json({ message: \"User not authenticated\" });\n  }\n  const userId = req.user.id;\n  const updatedBook = req.body; // Get updated book data from request body\n  const { book_id } = req.params; // Extract book_id from request param\n\n  try {\n    // Update the book in the database\n    const updatedResult = await books.updateOne(updatedBook, book_id, userId); // Pass updatedBook directly\n\n    if (!updatedResult.affectedRows) {\n      return res\n        .status(404)\n        .json({ message: \"Book not found or no changes made.\" });\n    }\n\n    // Respond with the updated book data\n    res.json({\n      id: updatedResult.book_id,\n      user_id: updatedResult.user_id,\n      title: updatedResult.title,\n      authors: updatedResult.authors ? updatedResult.authors.split(\", \") : [], // split works as input if a string\n      comments: updatedResult.comments,\n      link: updatedResult.link,\n      image: updatedResult.image,\n      google_id: updatedResult.google_id,\n      type: updatedResult.type,\n      location: updatedResult.location,\n      status: updatedResult.status,\n      rating: updatedResult.rating,\n    });\n  } catch (err) {\n    console.error(err);\n    next(err);\n  }\n});\n\nexport default BooksRouter;\n"],"mappings":"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","ignoreList":[]}