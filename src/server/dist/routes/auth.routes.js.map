{"version":3,"file":"auth.routes.js","names":["_express","_interopRequireDefault","require","_passport","AuthRouter","express","Router","redirectUrl","process","env","CLIENT_URL","get","passport","authenticate","scope","failureRedirect","_ref","_asyncToGenerator2","_regenerator","mark","_callee","req","res","wrap","_callee$","_context","prev","next","redirect","stop","_x","_x2","apply","arguments","_ref2","_callee2","_callee2$","_context2","isAuthenticated","json","user","status","message","_x3","_x4","post","logout","err","session","_default","exports"],"sources":["../../routes/auth.routes.js"],"sourcesContent":["// Using Google OAuth to sign in \nimport express from \"express\";\nimport passport from \"passport\";// Used Passport Library - middleware for handling authentication\n\nconst AuthRouter = express.Router();\n\nconst redirectUrl = process.env.CLIENT_URL || 'http://localhost:3000/'; // Use the environment variable\n\n// Redirect to Google for authentication\nAuthRouter.get('/google', passport.authenticate('google', { \n    scope: ['profile', 'email'], \n    // prompt: 'select_account' // This will prompt the user to select an account each time they sign in \n}));\n\n// Callback route for Google to redirect to\nAuthRouter.get('/google/callback', \n    passport.authenticate('google', { failureRedirect: '/' }),\n    async (req, res) => {\n        res.redirect(redirectUrl); // Redirect to the account/home page (Client side) after auth\n    }\n);\n\n// User profile route\nAuthRouter.get('/profile', async (req, res) => {\n    if (req.isAuthenticated()) {\n        res.json(req.user); // Return the authenticated user\n    } else {\n        res.status(401).json({ message: 'User not authenticated' });\n    }\n});\n\n// Logout endpoint\nAuthRouter.post('/logout', (req, res) => {\n    req.logout((err) => {\n        if (err) return next(err);\n        req.session = null; // Clear session data\n        res.redirect('/loggedout'); // Redirect after logout\n    });\n});\n\nexport default AuthRouter;"],"mappings":";AACA,IAAAA,QAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,SAAA,GAAAF,sBAAA,CAAAC,OAAA,cAAgC,CAFhC;AAEgC;AAEhC,IAAME,UAAU,GAAGC,mBAAO,CAACC,MAAM,CAAC,CAAC;;AAEnC,IAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,IAAI,wBAAwB,CAAC,CAAC;;AAExE;AACAN,UAAU,CAACO,GAAG,CAAC,SAAS,EAAEC,oBAAQ,CAACC,YAAY,CAAC,QAAQ,EAAE;EACtDC,KAAK,EAAE,CAAC,SAAS,EAAE,OAAO;EAC1B;AACJ,CAAC,CAAC,CAAC;;AAEH;AACAV,UAAU,CAACO,GAAG,CAAC,kBAAkB;AAC7BC,oBAAQ,CAACC,YAAY,CAAC,QAAQ,EAAE,EAAEE,eAAe,EAAE,GAAG,CAAC,CAAC,CAAC,gCAAAC,IAAA,OAAAC,kBAAA,0BAAAC,YAAA,YAAAC,IAAA;IACzD,SAAAC,QAAOC,GAAG,EAAEC,GAAG,UAAAJ,YAAA,YAAAK,IAAA,UAAAC,SAAAC,QAAA,qBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YACXL,GAAG,CAACM,QAAQ,CAACrB,WAAW,CAAC,CAAC,CAAC;UAAA,yBAAAkB,QAAA,CAAAI,IAAA,OAAAT,OAAA,GAC9B,oBAAAU,EAAA,EAAAC,GAAA,UAAAf,IAAA,CAAAgB,KAAA,OAAAC,SAAA;AACL,CAAC;;AAED;AACA7B,UAAU,CAACO,GAAG,CAAC,UAAU,gCAAAuB,KAAA,OAAAjB,kBAAA,0BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAgB,SAAOd,GAAG,EAAEC,GAAG,UAAAJ,YAAA,YAAAK,IAAA,UAAAa,UAAAC,SAAA,qBAAAA,SAAA,CAAAX,IAAA,GAAAW,SAAA,CAAAV,IAAA;UACtC,IAAIN,GAAG,CAACiB,eAAe,CAAC,CAAC,EAAE;YACvBhB,GAAG,CAACiB,IAAI,CAAClB,GAAG,CAACmB,IAAI,CAAC,CAAC,CAAC;UACxB,CAAC,MAAM;YACHlB,GAAG,CAACmB,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC,EAAEG,OAAO,EAAE,wBAAwB,CAAC,CAAC,CAAC;UAC/D,CAAC,yBAAAL,SAAA,CAAAR,IAAA,OAAAM,QAAA,GACJ,oBAAAQ,GAAA,EAAAC,GAAA,UAAAV,KAAA,CAAAF,KAAA,OAAAC,SAAA;AAAA,CAAC;;AAEF;AACA7B,UAAU,CAACyC,IAAI,CAAC,SAAS,EAAE,UAACxB,GAAG,EAAEC,GAAG,EAAK;EACrCD,GAAG,CAACyB,MAAM,CAAC,UAACC,GAAG,EAAK;IAChB,IAAIA,GAAG,EAAE,OAAOpB,IAAI,CAACoB,GAAG,CAAC;IACzB1B,GAAG,CAAC2B,OAAO,GAAG,IAAI,CAAC,CAAC;IACpB1B,GAAG,CAACM,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;EAChC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,IAAAqB,QAAA,GAAAC,OAAA;;AAEY9C,UAAU","ignoreList":[]}