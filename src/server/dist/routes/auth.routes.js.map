{"version":3,"file":"auth.routes.js","names":["express","passport","AuthRouter","Router","redirectUrl","process","env","CLIENT_URL","get","authenticate","scope","failureRedirect","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","req","res","wrap","_callee$","_context","prev","next","console","log","user","redirect","stop","_x","_x2","apply","arguments","_ref2","_callee2","_callee2$","_context2","isAuthenticated","json","status","message","_x3","_x4","post","logout","err","session"],"sources":["../../routes/auth.routes.js"],"sourcesContent":["// Using Google OAuth to sign in \nimport express from \"express\";\nimport passport from \"passport\";// Used Passport Library - middleware for handling authentication\n\nconst AuthRouter = express.Router();\n\nconst redirectUrl = process.env.CLIENT_URL || 'http://localhost:8080/'; // Use the environment variable\n\n// Redirect to Google for authentication\nAuthRouter.get('/google', passport.authenticate('google', { \n    scope: ['profile', 'email'], \n    // prompt: 'select_account' // This will prompt the user to select an account each time they sign in \n}));\n\n// Callback route for Google to redirect to\nAuthRouter.get('/google/callback', \n    passport.authenticate('google', { failureRedirect: '/' }),\n    async (req, res) => {\n        console.log('Authenticated User:', req.user);\n        res.redirect(redirectUrl); // Redirect to the account/home page (Client side) after auth\n    }\n);\n\n// User profile route\nAuthRouter.get('/profile', async (req, res) => {\n    if (req.isAuthenticated()) {\n        res.json(req.user); // Return the authenticated user\n    } else {\n        res.status(401).json({ message: 'User not authenticated' });\n    }\n});\n\n// Logout endpoint\nAuthRouter.post('/logout', (req, res) => {\n    req.logout((err) => {\n        if (err) return next(err);\n        req.session = null; // Clear session data\n        res.redirect('/loggedout'); // Redirect after logout\n    });\n});\n\nexport default AuthRouter;"],"mappings":"sIAAA;AACA,OAAOA,OAAO,MAAM,SAAS;AAC7B,OAAOC,QAAQ,MAAM,UAAU,CAAC;;AAEhC,IAAMC,UAAU,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;;AAEnC,IAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,IAAI,wBAAwB,CAAC,CAAC;;AAExE;AACAL,UAAU,CAACM,GAAG,CAAC,SAAS,EAAEP,QAAQ,CAACQ,YAAY,CAAC,QAAQ,EAAE;EACtDC,KAAK,EAAE,CAAC,SAAS,EAAE,OAAO;EAC1B;AACJ,CAAC,CAAC,CAAC;;AAEH;AACAR,UAAU,CAACM,GAAG,CAAC,kBAAkB;AAC7BP,QAAQ,CAACQ,YAAY,CAAC,QAAQ,EAAE,EAAEE,eAAe,EAAE,GAAG,CAAC,CAAC,CAAC,gCAAAC,IAAA,GAAAC,iBAAA,cAAAC,mBAAA,CAAAC,IAAA;IACzD,SAAAC,QAAOC,GAAG,EAAEC,GAAG,UAAAJ,mBAAA,CAAAK,IAAA,UAAAC,SAAAC,QAAA,qBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YACXC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAER,GAAG,CAACS,IAAI,CAAC;YAC5CR,GAAG,CAACS,QAAQ,CAACvB,WAAW,CAAC,CAAC,CAAC;UAAA,yBAAAiB,QAAA,CAAAO,IAAA,OAAAZ,OAAA,GAC9B,oBAAAa,EAAA,EAAAC,GAAA,UAAAlB,IAAA,CAAAmB,KAAA,OAAAC,SAAA;AACL,CAAC;;AAED;AACA9B,UAAU,CAACM,GAAG,CAAC,UAAU,gCAAAyB,KAAA,GAAApB,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,CAAE,SAAAmB,SAAOjB,GAAG,EAAEC,GAAG,UAAAJ,mBAAA,CAAAK,IAAA,UAAAgB,UAAAC,SAAA,qBAAAA,SAAA,CAAAd,IAAA,GAAAc,SAAA,CAAAb,IAAA;UACtC,IAAIN,GAAG,CAACoB,eAAe,CAAC,CAAC,EAAE;YACvBnB,GAAG,CAACoB,IAAI,CAACrB,GAAG,CAACS,IAAI,CAAC,CAAC,CAAC;UACxB,CAAC,MAAM;YACHR,GAAG,CAACqB,MAAM,CAAC,GAAG,CAAC,CAACD,IAAI,CAAC,EAAEE,OAAO,EAAE,wBAAwB,CAAC,CAAC,CAAC;UAC/D,CAAC,yBAAAJ,SAAA,CAAAR,IAAA,OAAAM,QAAA,GACJ,oBAAAO,GAAA,EAAAC,GAAA,UAAAT,KAAA,CAAAF,KAAA,OAAAC,SAAA;AAAA,CAAC;;AAEF;AACA9B,UAAU,CAACyC,IAAI,CAAC,SAAS,EAAE,UAAC1B,GAAG,EAAEC,GAAG,EAAK;EACrCD,GAAG,CAAC2B,MAAM,CAAC,UAACC,GAAG,EAAK;IAChB,IAAIA,GAAG,EAAE,OAAOtB,IAAI,CAACsB,GAAG,CAAC;IACzB5B,GAAG,CAAC6B,OAAO,GAAG,IAAI,CAAC,CAAC;IACpB5B,GAAG,CAACS,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;EAChC,CAAC,CAAC;AACN,CAAC,CAAC;;AAEF,eAAezB,UAAU","ignoreList":[]}