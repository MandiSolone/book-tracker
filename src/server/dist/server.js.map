{"version":3,"file":"server.js","names":["express","morgan","cors","path","fileURLToPath","dirname","apiRouter","config","errorHandler","passport","session","RedisStore","createClient","Strategy","GoogleStrategy","authRouter","googleAuthCallback","serializeUser","deserializeUser","startServer","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","redisUrl","redisClient","app","sessionStore","corsOptions","__filename","__dirname","staticPath","wrap","_callee$","_context","prev","next","process","env","REDISCLOUD_URL","url","connect","client","use","store","secret","oauth","sessionSecret","resave","saveUninitialized","cookie","secure","httpOnly","sameSite","maxAge","rolling","unset","initialize","json","origin","CLIENT_URL","credentials","clientID","googleClientId","clientSecret","googleClientSecret","callbackURL","GOOGLE_CALLBACK_URL","import","meta","join","get","req","res","sendFile","listen","port","console","log","concat","t0","error","stop","apply","arguments"],"sources":["../server.js"],"sourcesContent":["import express from \"express\";\nimport morgan from \"morgan\";\nimport cors from \"cors\";\nimport path from \"path\";\nimport { fileURLToPath } from \"url\";\nimport { dirname } from \"path\";\nimport apiRouter from \"./routes/index.js\"; // Aggregated routes\nimport config from \"./config/index.js\"; // The config file mysql, port, oauth\nimport { errorHandler } from \"./middlewares/errorHandler.js\";\n//OAuth and Redis\nimport passport from \"passport\"; // From auth.routes\nimport session from \"express-session\"; // Dev & Prod session stors for user info\nimport RedisStore from \"connect-redis\";\nimport { createClient } from \"redis\";\nimport { Strategy as GoogleStrategy } from \"passport-google-oauth20\";\nimport authRouter from \"./routes/auth.routes.js\"; // Import the new auth routes\n// Resp from mysqlUrls > promise > query > UserDbTable > output here\nimport {\n  googleAuthCallback,\n  serializeUser,\n  deserializeUser,\n} from \"./controllers/auth.controller.js\";\n\n// Main async function\nconst startServer = async () => {\n  // Determine Redis URL based on environment (dev or prod)\n  const redisUrl = process.env.REDISCLOUD_URL || \"redis://localhost:6379\";\n  const redisClient = createClient({ url: redisUrl });\n\n  // Connect to the Redis client\n  try {\n    await redisClient.connect();\n    const app = express(); // Initialize your Express app here\n    const sessionStore = new RedisStore({ client: redisClient }); // Configure the session store\n\n    // OAuth session middleware- At the top, before initalizing Passport and defining any routes\n    app.use(\n      session({\n        store: sessionStore,\n        secret: config.oauth.sessionSecret, // Use session secret from config\n        resave: false,\n        saveUninitialized: true, // Create a seesion for every user that accesse site, even if they haven't auth.\n        // saveUninitialized: false, //recommended, especially if you're concerned about session storage efficiency and want to avoid creating empty sessions.\n        cookie: {\n          secure: false, // Tempararily set to fales for debugging\n          // secure: process.env.NODE_ENV === \"production\", // Set secure to true only in production\n          httpOnly: true, // Recommended for security\n          sameSite: \"lax\", // Helps mitigate CSRF attacks by allowing cookies to be sent only in first-party contexts\n          maxAge: 24 * 60 * 60 * 1000, // 1 day (optional, adjust as needed)\n        },\n        rolling: true, // Reset cookie expiration on each request\n        unset: \"destroy\", // Destroy sessions when they are no longer needed\n      })\n    );\n\n    // Initialize Passport Library\n    app.use(passport.initialize());\n    app.use(passport.session());\n\n    app.use(express.json()); // Middleware, Parses inc req and attaches JSON to body parameter of the request object\n\n    // CORS allows using multi domains\n    const corsOptions = {\n      origin: process.env.CLIENT_URL || \"http://localhost:3000\",\n      credentials: true, // Allow credentials to be sent\n    };\n    app.use(cors(corsOptions));\n\n    app.use(morgan(\"dev\")); // Logs incoming request information to the dev console (url, resp, req)\n\n    // Passport configuration for Google OAuth\n    passport.use(\n      new GoogleStrategy(\n        {\n          clientID: config.oauth.googleClientId, // Config/index.js\n          clientSecret: config.oauth.googleClientSecret,\n          callbackURL: process.env.GOOGLE_CALLBACK_URL, // Google Callback URL in .env\n        },\n        googleAuthCallback\n      )\n    );\n\n    // Serialize and deserialize user- Add lines after session middleware and before defining routes\n    passport.serializeUser(serializeUser);\n    passport.deserializeUser(deserializeUser);\n\n    // Define routers\n    app.use(\"/api\", apiRouter);\n    app.use(\"/auth\", authRouter);\n\n    // Serve static files from the React app (front end) __dirname\n    const __filename = fileURLToPath(import.meta.url);\n    const __dirname = dirname(__filename);\n    const staticPath = path.join(__dirname, \"..\", \"../client/build\");\n    app.use(express.static(staticPath));\n\n    // Handle GET all requests to serve the React app (front end)\n    app.get(\"*\", (req, res) => {\n      res.sendFile(path.join(staticPath, \"index.html\"));\n    });\n\n    app.use(errorHandler); // Default Error handler middleware, place code at the bottom\n\n    // Bind the app to a specified port\n    app.listen(config.port || 8080, () =>\n      console.log(`Server listening on port ${config.port}...`)\n    );\n  } catch (err) {\n    console.error(\"server - Redis Client Connection Error\", err);\n  }\n};\n\n// Start the server\nstartServer();\n"],"mappings":"qIAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,aAAa,QAAQ,KAAK;AACnC,SAASC,OAAO,QAAQ,MAAM;AAC9B,OAAOC,SAAS,MAAM,mBAAmB,CAAC,CAAC;AAC3C,OAAOC,MAAM,MAAM,mBAAmB,CAAC,CAAC;AACxC,SAASC,YAAY,QAAQ,+BAA+B;AAC5D;AACA,OAAOC,QAAQ,MAAM,UAAU,CAAC,CAAC;AACjC,OAAOC,OAAO,MAAM,iBAAiB,CAAC,CAAC;AACvC,OAAOC,UAAU,MAAM,eAAe;AACtC,SAASC,YAAY,QAAQ,OAAO;AACpC,SAASC,QAAQ,IAAIC,cAAc,QAAQ,yBAAyB;AACpE,OAAOC,UAAU,MAAM,yBAAyB,CAAC,CAAC;AAClD;AACA;EACEC,kBAAkB;EAClBC,aAAa;EACbC,eAAe;AACV,kCAAkC;;AAEzC;AACA,IAAMC,WAAW,iCAAAC,IAAA,GAAAC,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,CAAG,SAAAC,QAAA,OAAAC,QAAA,EAAAC,WAAA,EAAAC,GAAA,EAAAC,YAAA,EAAAC,WAAA,EAAAC,UAAA,EAAAC,SAAA,EAAAC,UAAA,QAAAV,mBAAA,CAAAW,IAAA,UAAAC,SAAAC,QAAA,qBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAClB;UACMZ,QAAQ,GAAGa,OAAO,CAACC,GAAG,CAACC,cAAc,IAAI,wBAAwB;UACjEd,WAAW,GAAGd,YAAY,CAAC,EAAE6B,GAAG,EAAEhB,QAAQ,CAAC,CAAC,CAAC;;UAEnD;UAAAU,QAAA,CAAAC,IAAA,KAAAD,QAAA,CAAAE,IAAA;YAEQX,WAAW,CAACgB,OAAO,CAAC,CAAC;UACrBf,GAAG,GAAG3B,OAAO,CAAC,CAAC,EAAE;UACjB4B,YAAY,GAAG,IAAIjB,UAAU,CAAC,EAAEgC,MAAM,EAAEjB,WAAW,CAAC,CAAC,CAAC,EAAE;;UAE9D;UACAC,GAAG,CAACiB,GAAG;YACLlC,OAAO,CAAC;cACNmC,KAAK,EAAEjB,YAAY;cACnBkB,MAAM,EAAEvC,MAAM,CAACwC,KAAK,CAACC,aAAa,EAAE;cACpCC,MAAM,EAAE,KAAK;cACbC,iBAAiB,EAAE,IAAI,EAAE;cACzB;cACAC,MAAM,EAAE;gBACNC,MAAM,EAAE,KAAK,EAAE;gBACf;gBACAC,QAAQ,EAAE,IAAI,EAAE;gBAChBC,QAAQ,EAAE,KAAK,EAAE;gBACjBC,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAE;cAC/B,CAAC;cACDC,OAAO,EAAE,IAAI,EAAE;cACfC,KAAK,EAAE,SAAS,CAAE;YACpB,CAAC;UACH,CAAC;;UAED;UACA9B,GAAG,CAACiB,GAAG,CAACnC,QAAQ,CAACiD,UAAU,CAAC,CAAC,CAAC;UAC9B/B,GAAG,CAACiB,GAAG,CAACnC,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC;;UAE3BiB,GAAG,CAACiB,GAAG,CAAC5C,OAAO,CAAC2D,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;UAEzB;UACM9B,WAAW,GAAG;YAClB+B,MAAM,EAAEtB,OAAO,CAACC,GAAG,CAACsB,UAAU,IAAI,uBAAuB;YACzDC,WAAW,EAAE,IAAI,CAAE;UACrB,CAAC;UACDnC,GAAG,CAACiB,GAAG,CAAC1C,IAAI,CAAC2B,WAAW,CAAC,CAAC;;UAE1BF,GAAG,CAACiB,GAAG,CAAC3C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;UAExB;UACAQ,QAAQ,CAACmC,GAAG;YACV,IAAI9B,cAAc;cAChB;gBACEiD,QAAQ,EAAExD,MAAM,CAACwC,KAAK,CAACiB,cAAc,EAAE;gBACvCC,YAAY,EAAE1D,MAAM,CAACwC,KAAK,CAACmB,kBAAkB;gBAC7CC,WAAW,EAAE7B,OAAO,CAACC,GAAG,CAAC6B,mBAAmB,CAAE;cAChD,CAAC;cACDpD;YACF;UACF,CAAC;;UAED;UACAP,QAAQ,CAACQ,aAAa,CAACA,aAAa,CAAC;UACrCR,QAAQ,CAACS,eAAe,CAACA,eAAe,CAAC;;UAEzC;UACAS,GAAG,CAACiB,GAAG,CAAC,MAAM,EAAEtC,SAAS,CAAC;UAC1BqB,GAAG,CAACiB,GAAG,CAAC,OAAO,EAAE7B,UAAU,CAAC;;UAE5B;UACMe,UAAU,GAAG1B,aAAa,CAACiE,MAAM,CAACC,IAAI,CAAC7B,GAAG,CAAC;UAC3CV,SAAS,GAAG1B,OAAO,CAACyB,UAAU,CAAC;UAC/BE,UAAU,GAAG7B,IAAI,CAACoE,IAAI,CAACxC,SAAS,EAAE,IAAI,EAAE,iBAAiB,CAAC;UAChEJ,GAAG,CAACiB,GAAG,CAAC5C,OAAO,UAAO,CAACgC,UAAU,CAAC,CAAC;;UAEnC;UACAL,GAAG,CAAC6C,GAAG,CAAC,GAAG,EAAE,UAACC,GAAG,EAAEC,GAAG,EAAK;YACzBA,GAAG,CAACC,QAAQ,CAACxE,IAAI,CAACoE,IAAI,CAACvC,UAAU,EAAE,YAAY,CAAC,CAAC;UACnD,CAAC,CAAC;;UAEFL,GAAG,CAACiB,GAAG,CAACpC,YAAY,CAAC,CAAC,CAAC;;UAEvB;UACAmB,GAAG,CAACiD,MAAM,CAACrE,MAAM,CAACsE,IAAI,IAAI,IAAI,EAAE;cAC9BC,OAAO,CAACC,GAAG,6BAAAC,MAAA,CAA6BzE,MAAM,CAACsE,IAAI,QAAK,CAAC;UAC3D,CAAC,CAAC1C,QAAA,CAAAE,IAAA,oBAAAF,QAAA,CAAAC,IAAA,MAAAD,QAAA,CAAA8C,EAAA,GAAA9C,QAAA;;UAEF2C,OAAO,CAACI,KAAK,CAAC,wCAAwC,EAAA/C,QAAA,CAAA8C,EAAK,CAAC,CAAC,0BAAA9C,QAAA,CAAAgD,IAAA,OAAA3D,OAAA,oBAEhE,mBAtFKL,WAAWA,CAAA,UAAAC,IAAA,CAAAgE,KAAA,OAAAC,SAAA,OAsFhB;;;;AAED;AACAlE,WAAW,CAAC,CAAC","ignoreList":[]}