{"version":3,"file":"auth.controller.js","names":["query","googleAuthCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","accessToken","refreshToken","profile","done","userEmail","results","newUser","insertedUser","wrap","_callee$","_context","prev","next","emails","value","sent","length","abrupt","email","name","displayName","t0","stop","_x","_x2","_x3","_x4","apply","arguments","serializeUser","user","console","log","id","deserializeUser","_ref2","_callee2","_callee2$","_context2","error","_x5","_x6"],"sources":["../../controllers/auth.controller.js"],"sourcesContent":["// query is mySQL db (local-dev or clear-heroku-production) \n// sending commands from google oauth to user table during sing in\nimport query from \"../db/utils.js\";\n\n// Google OAuth callback function\nexport const googleAuthCallback = async (\n  accessToken,\n  refreshToken,\n  profile,\n  done\n) => {\n  const userEmail = profile.emails[0].value;\n\n  try {\n    // Check if user exists\n    const results = await query(\"SELECT * FROM users WHERE email = ?\", [\n      userEmail,\n    ]);\n\n    if (results.length > 0) {\n      return done(null, results[0]);\n    } else {\n      const newUser = { email: userEmail, name: profile.displayName };\n      await query(\"INSERT INTO users SET ?\", newUser);\n      const insertedUser = await query(\"SELECT * FROM users WHERE email = ?\", [\n        userEmail,\n      ]);\n      return done(null, insertedUser[0]);\n    }\n  } catch (err) {\n    return done(err);\n  }\n};\n\n// Serialize and deserialize user functions exported\nexport const serializeUser = (user, done) => {\n  console.log('auth.controllers - Serializing user:', user); // Log user info being serialized\n  done(null, user.id); // Use user.id to identify the user\n};\n\nexport const deserializeUser = async (id, done) => {\n  console.log('auth.controllers - Deserializing user with ID:', id); // Log ID being deserialized\n  try {\n    const user = await query(\"SELECT * FROM users WHERE id = ?\", [id]);\n    console.log('auth.controllers - B - Deserializing user:', user[0]); // Log user info being deserialized\n    done(null, user[0]); // Pass the user object to the session\n  } catch (err) {\n    console.error('auth.controllers - Database Error:', err); // Log error for debugging\n    done(err);\n  }\n};"],"mappings":"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","ignoreList":[]}