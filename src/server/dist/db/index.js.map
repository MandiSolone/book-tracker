{"version":3,"file":"index.js","names":["config","mysql","url","connection","process","env","NODE_ENV","console","log","clearDBUrl","CLEARDB_DATABASE_URL","error","Error","_url","URL","hostname","username","password","pathname","database","slice","createPool","host","user","getConnection","err","conn","release"],"sources":["../../db/index.js"],"sourcesContent":["import config from \"../config/index.js\"; // local config file\nimport mysql from \"mysql\"; // Default built in component\nimport url from \"url\"; // URL module for parsing, built in Node mod\n\nlet connection;\n\nif (process.env.NODE_ENV === \"production\") {\n  console.log(\"Environment: Production\");\n\n  const clearDBUrl = process.env.CLEARDB_DATABASE_URL;\n  console.log(\"ClearDB URL:\", clearDBUrl || \"Not set\"); // Log the URL to ensure it's being picked up\n\n  if (!clearDBUrl) {\n    console.error(\"CLEARDB_DATABASE_URL is not defined\");\n    throw new Error(\"CLEARDB_DATABASE_URL is not defined\");\n  }\n\n  try {\n    const _url = new url.URL(clearDBUrl);\n    const hostname = _url.hostname;\n    const username = _url.username;\n    const password = _url.password;\n    const pathname = _url.pathname;\n    const database = pathname.slice(1); // Remove leading '/'\n\n    console.log(\"DB Config - Host:\", hostname, \"Database:\", database); // Log the DB config\n\n    connection = mysql.createPool({\n      host: hostname,\n      user: username,\n      password: password,\n      database: database,\n    });\n\n    // Log when a connection is established\n    connection.getConnection((err, conn) => {\n      if (err) {\n        console.error(\"Error connecting to ClearDB:\", err);\n      } else {\n        console.log(\"Successfully connected to ClearDB.\");\n        conn.release(); // Release the connection back to the pool\n      }\n    });\n\n    console.log(\"Database connection pool created for ClearDB.\");\n  } catch (error) {\n    console.error(\"Error parsing ClearDB URL:\", error);\n  }\n\n  // If not prod(ClearDB), then local MySQL\n} else {\n  console.log(\"Environment: Development\");\n  console.log(\"Using local MySQL config\");\n\n  connection = mysql.createPool(config.mysql);\n  console.log(\"Database connection pool created for local MySQL.\");\n}\n\nexport default connection; // import connection to utils (wrap in promise)> export as query\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,oBAAoB,CAAC,CAAC;AACzC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,GAAG,MAAM,KAAK,CAAC,CAAC;;AAEvB,IAAIC,UAAU;;AAEd,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;;EAEtC,IAAMC,UAAU,GAAGL,OAAO,CAACC,GAAG,CAACK,oBAAoB;EACnDH,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEC,UAAU,IAAI,SAAS,CAAC,CAAC,CAAC;;EAEtD,IAAI,CAACA,UAAU,EAAE;IACfF,OAAO,CAACI,KAAK,CAAC,qCAAqC,CAAC;IACpD,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;EACxD;;EAEA,IAAI;IACF,IAAMC,IAAI,GAAG,IAAIX,GAAG,CAACY,GAAG,CAACL,UAAU,CAAC;IACpC,IAAMM,QAAQ,GAAGF,IAAI,CAACE,QAAQ;IAC9B,IAAMC,QAAQ,GAAGH,IAAI,CAACG,QAAQ;IAC9B,IAAMC,QAAQ,GAAGJ,IAAI,CAACI,QAAQ;IAC9B,IAAMC,QAAQ,GAAGL,IAAI,CAACK,QAAQ;IAC9B,IAAMC,QAAQ,GAAGD,QAAQ,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEpCb,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEO,QAAQ,EAAE,WAAW,EAAEI,QAAQ,CAAC,CAAC,CAAC;;IAEnEhB,UAAU,GAAGF,KAAK,CAACoB,UAAU,CAAC;MAC5BC,IAAI,EAAEP,QAAQ;MACdQ,IAAI,EAAEP,QAAQ;MACdC,QAAQ,EAAEA,QAAQ;MAClBE,QAAQ,EAAEA;IACZ,CAAC,CAAC;;IAEF;IACAhB,UAAU,CAACqB,aAAa,CAAC,UAACC,GAAG,EAAEC,IAAI,EAAK;MACtC,IAAID,GAAG,EAAE;QACPlB,OAAO,CAACI,KAAK,CAAC,8BAA8B,EAAEc,GAAG,CAAC;MACpD,CAAC,MAAM;QACLlB,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;QACjDkB,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;MAClB;IACF,CAAC,CAAC;;IAEFpB,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;EAC9D,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdJ,OAAO,CAACI,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;EACpD;;EAEA;AACF,CAAC,MAAM;EACLJ,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EACvCD,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;;EAEvCL,UAAU,GAAGF,KAAK,CAACoB,UAAU,CAACrB,MAAM,CAACC,KAAK,CAAC;EAC3CM,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;AAClE;;AAEA,eAAeL,UAAU,CAAC,CAAC","ignoreList":[]}