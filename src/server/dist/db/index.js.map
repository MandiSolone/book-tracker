{"version":3,"file":"index.js","names":["config","mysql","url","connection","process","env","NODE_ENV","console","log","clearDBUrl","CLEARDB_DATABASE_URL","error","Error","_url","URL","hostname","username","password","pathname","database","slice","createPool","host","user"],"sources":["../../db/index.js"],"sourcesContent":["// import config from \"../config/index.js\"; // local config file\n// import mysql from \"mysql\"; // Default built in component\n// import url from \"url\"; // URL module for parsing, built in Node mod\n\n// const connection = mysql.createPool(config.mysql);\n\n// let connection;\n\n// if (process.env.NODE_ENV === 'production') {\n//     // Use ClearDB_DATABASE_URL from Heroku\n//     const clearDBUrl = process.env.CLEARDB_DATABASE_URL;\n\n//     // Create a connection pool from the ClearDB URL\n//     connection = mysql.createPool({\n//       uri: clearDBUrl,\n//       // Note: May need to parse the URL if using mysql2\n//     });\n//   } else {\n//     // Use local MySQL config\n//     connection = mysql.createPool(config.mysql);\n//   }\n\nimport config from \"../config/index.js\"; // local config file\nimport mysql from \"mysql\"; // Default built in component\nimport url from \"url\"; // URL module for parsing, built in Node mod\n\nlet connection;\n\nif (process.env.NODE_ENV === 'production') {\n  console.log(\"Environment: Production\");\n\n  const clearDBUrl = process.env.CLEARDB_DATABASE_URL;\n  console.log(\"ClearDB URL:\", clearDBUrl); // Log the URL to ensure it's being picked up\n\n  if (!clearDBUrl) {\n    console.error(\"CLEARDB_DATABASE_URL is not defined\");\n    throw new Error(\"CLEARDB_DATABASE_URL is not defined\");\n  }\n\n  try {\n    const _url = new url.URL(clearDBUrl);\n    const hostname = _url.hostname;\n    const username = _url.username;\n    const password = _url.password;\n    const pathname = _url.pathname;\n    const database = pathname.slice(1); // Remove leading '/'\n\n    console.log(\"DB Config - Host:\", hostname, \"User:\", username, \"Database:\", database); // Log the DB config\n\n    connection = mysql.createPool({\n      host: hostname,\n      user: username,\n      password: password,\n      database: database\n    });\n\n    console.log(\"Database connection pool created for ClearDB.\");\n  } catch (error) {\n    console.error(\"Error parsing ClearDB URL:\", error);\n  }\n} else {\n  console.log(\"Environment: Development\");\n  console.log(\"Using local MySQL config:\", config.mysql);\n\n  connection = mysql.createPool(config.mysql);\n  console.log(\"Database connection pool created for local MySQL.\");\n}\n\nexport default connection; // import connection to utils (wrap in promise)> export as query\n//# sourceMappingURL=index.js.map"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,MAAM,MAAM,oBAAoB,CAAC,CAAC;AACzC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,GAAG,MAAM,KAAK,CAAC,CAAC;;AAEvB,IAAIC,UAAU;;AAEd,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;;EAEtC,IAAMC,UAAU,GAAGL,OAAO,CAACC,GAAG,CAACK,oBAAoB;EACnDH,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEC,UAAU,CAAC,CAAC,CAAC;;EAEzC,IAAI,CAACA,UAAU,EAAE;IACfF,OAAO,CAACI,KAAK,CAAC,qCAAqC,CAAC;IACpD,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;EACxD;;EAEA,IAAI;IACF,IAAMC,IAAI,GAAG,IAAIX,GAAG,CAACY,GAAG,CAACL,UAAU,CAAC;IACpC,IAAMM,QAAQ,GAAGF,IAAI,CAACE,QAAQ;IAC9B,IAAMC,QAAQ,GAAGH,IAAI,CAACG,QAAQ;IAC9B,IAAMC,QAAQ,GAAGJ,IAAI,CAACI,QAAQ;IAC9B,IAAMC,QAAQ,GAAGL,IAAI,CAACK,QAAQ;IAC9B,IAAMC,QAAQ,GAAGD,QAAQ,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEpCb,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEO,QAAQ,EAAE,OAAO,EAAEC,QAAQ,EAAE,WAAW,EAAEG,QAAQ,CAAC,CAAC,CAAC;;IAEtFhB,UAAU,GAAGF,KAAK,CAACoB,UAAU,CAAC;MAC5BC,IAAI,EAAEP,QAAQ;MACdQ,IAAI,EAAEP,QAAQ;MACdC,QAAQ,EAAEA,QAAQ;MAClBE,QAAQ,EAAEA;IACZ,CAAC,CAAC;;IAEFZ,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;EAC9D,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdJ,OAAO,CAACI,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;EACpD;AACF,CAAC,MAAM;EACLJ,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EACvCD,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAER,MAAM,CAACC,KAAK,CAAC;;EAEtDE,UAAU,GAAGF,KAAK,CAACoB,UAAU,CAACrB,MAAM,CAACC,KAAK,CAAC;EAC3CM,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;AAClE;;AAEA,eAAeL,UAAU,CAAC,CAAC","ignoreList":[]}